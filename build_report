#!/usr/bin/env python3
import os
import json
from os.path import basename
from glob import glob
from subprocess import call
from datetime import datetime
from lib import config
from lib import data_consolidator
from lib.locations import LOCATIONS

def main():
	template = get_template()
	template = add_data(template)
	template = add_location_file(template)
	template = add_years(template)
	template = add_config(template)
	template = inline_js(template)
	template = inline_css(template)
	write_report(template)

def get_template():
	with open(config.REPORT_DIR + '/report.html', 'r') as stream:
		template = stream.read()
	return template

def add_data(template):
	return template.replace(
		'{data}', 
		json.dumps(data_consolidator.build()))

def add_location_file(template):
	return template.replace(
		'{locations}', 
		json.dumps(LOCATIONS))

def add_years(template):
	return template.replace(
		'{years}', 
		json.dumps({
			'min':config.START_YEAR,
			'max':datetime.today().year,
		}))

def add_config(template):
	return template.replace(
		'{config}', 
		json.dumps({
			'dayGranularity':config.REPORT_DAY_GRANULARITY
		}))

def inline_js(template):
	return inline(template, '{inline_js_target}', '.js')

def inline_css(template):
	return inline(template, '{inline_css_target}', '.css')

def inline(template, target, extension):
	for path in glob(config.REPORT_DIR + '/*' + extension):
		with open(path, 'r') as stream:
			template = template.replace(
				target,
				stream.read() + '\n' + target)
	template = template.replace(target, '')
	return template


def write_report(template):
	path = '{}/Report_{}.html'.format(
		config.BASE_DIR, 
		datetime.today().strftime('%Y-%m-%d'))
	
	with open(path, 'w') as stream:
		stream.write(template)

	call(['xdg-open', path]) 

if __name__ == "__main__":
	main()
